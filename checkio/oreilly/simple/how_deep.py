"""
Вам дан кортеж, который состоит из целых чисел и других кортежей, которые тоже могут иметь внутри кортежи.

Ваша задача узнать на сколько глубока эта структура или какая глубина вложенности этих кортежей.

Например, в кортеже (1, 2, 3) глубина вложенности равна 1. А в кортеже (1, 2, (3,)) глубина вложенности равна 2,
так как один из элементов первого набора также является кортежем. А в кортеже (1, 2, (3, (4,))) глубина вложенности
равна 3, так как один из элементов первого кортежа является кортежем, но так как внутри он содержит другой кортеж,
то увеличивает глубину на единицу, поэтому глубина вложенности получается равной 3.

Важно отметить, что пустой кортеж также увеличивает глубину структуры, то есть () - указывает на глубину вложенности 1,
 ((),) - указывает на глубину вложенности 2.

Входные данные: Кортеж из кортежей из кортежей...целых чисел.

Выходные данные: Целое число.
"""


def how_deep(structure):
    count = 1
    deep = set()

    def rec(structure):
        nonlocal count
        count += 1
        for i in structure:
            if isinstance(i, tuple):
                deep.add(count)
                rec(i)
        count -= 1

    rec(structure)

    return max(deep) if deep else 1


if __name__ == '__main__':
    print("Example:")

    # These "asserts" are used for self-checking and not for an auto-testing
    assert how_deep((1, 2, 3)) == 1
    assert how_deep((1, 2, (3,))) == 2
    assert how_deep((1, 2, (3, (4,)))) == 3
    assert how_deep(()) == 1
    assert how_deep(((),)) == 2
    assert how_deep((((),),)) == 3
    assert how_deep((1, (2,), (3,))) == 2
    assert how_deep((1, ((),), (3,))) == 3
    print("Coding complete? Click 'Check' to earn cool rewards!")
